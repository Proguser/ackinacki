- name: Block keeper deployment
  hosts: '{{ target | default("block_keepers") }}'
  gather_facts: no
  become: yes
  tasks:
  - name: "Get Epoch code hash"
    ansible.builtin.set_fact:
      CODE_HASH: "{{ lookup('ansible.builtin.file', '../contracts/bksystem/BlockKeeperEpochContract.code.hash') }}"

  - name: "Ensures dir exists: {{ BK_DIR }}"
    ansible.builtin.file:
      path: "{{ BK_DIR | mandatory }}/"
      state: directory
      mode: u=rwx,g=rwx,o=rwx

  - name: "Ensures node share dir exists: {{ BK_DATA_DIR }}/share"
    ansible.builtin.file:
      path: "{{ BK_DATA_DIR | mandatory }}/share"
      state: directory
      mode: u=rwx,g=rwx,o=rwx

  - name: "Ensures node logs dir exists: {{ BK_LOGS_DIR | mandatory }}"
    ansible.builtin.file:
      path: "{{ BK_LOGS_DIR | mandatory }}"
      state: directory
      mode: u=rwx,g=rwx,o=rwx
  
  - name: "Ensures keys dir exists: {{ BK_DIR }}/bk-configs"
    ansible.builtin.file:
      path: "{{ BK_DIR }}/bk-configs"
      state: directory
      mode: u=rwx,g=,o=

  - name: "Ensures contracts dir exists: {{ BK_DIR }}/contracts"
    ansible.builtin.file:
      path: "{{ BK_DIR }}/contracts"
      state: directory
      mode: u=rwx,g=rx,o=rx

  - name: "Ensures Aerospike dirs exist"
    ansible.builtin.file:
      path: "{{ item }}"
      state: directory
      mode: u=rwx,g=rx,o=rx
    with_list:
      - "{{ BK_DATA_DIR }}/aerospike"
      - "{{ BK_DIR }}/aerospike-config"

  - name: "Ensures WASM binaries dir exists: {{ BK_DIR }}/bk-binaries/wasm"
    ansible.builtin.file:
      path: "{{ BK_DIR }}/bk-binaries/wasm"
      state: directory
      mode: u=rwx,g=rx,o=rx

  - name: Copy WASM binaries to Block Keeper
    copy:
      dest: "{{ BK_DIR }}/bk-binaries/wasm"
      src: "wasm/{{ item }}"
    loop:
      - "c5b3fe1a4fa391e9660a13d55ca2200f9343d5b1d18473ebbee19d8219e3ddc1"
      - "7b7f96a857a4ada292d7c6b1f47940dde33112a2c2bc15b577dff9790edaeef2"
      - "e88c99c9a1cbbde5bf47839db7685953c3bf266945f3270abb731ed84d58d163"
      - "e7adc782c05b67bcda5babaca1deabf80f30ca0e6cf668c89825286c3ce0e560"
      - "25dc3d80d7e4d8f27dfadc9c2faf9cf2d8dea0a9e08a692da2db7e34d74d66e1"

  - name: adjust limits
    lineinfile:
      dest: /etc/security/limits.conf
      state: present
      regexp: "{{ item.r }}"
      line: "{{ item.l }}"
    with_items:
      - { r: "hard nofile", l: "* hard nofile 1048576" }
      - { r: "soft nofile", l: "* soft nofile 1048576" }
      - { r: "hard memlock", l: "* hard memlock unlimited" }
      - { r: "soft memlock", l: "* soft memlock unlimited" }
      - { r: "hard nproc", l: "* hard nproc unlimited" }
      - { r: "soft nproc", l: "* soft nproc unlimited" }

  - name: sysctl limits
    lineinfile:
      dest: /etc/sysctl.conf
      state: present
      regexp: "vm.max_map_count"
      line: "vm.max_map_count = 512000"

  - name: docker memlock limit
    become: yes
    register: docker_changed
    ini_file:
      path: /lib/systemd/system/docker.service
      section: Service
      option: LimitMEMLOCK
      value: infinity
      no_extra_spaces: true
      backup: no

  - name: restart docker
    ansible.builtin.systemd:
      daemon_reexec: yes
      state: restarted
      name: docker
    when: docker_changed.changed

  - name: Copy configs files
    copy:
      dest: "{{ BK_DIR }}/bk-configs/"
      src: "{{ item }}"
    with_items: 
      - "{{ NODE_CONFIGS }}"
      - "{{ NODE_OWNER_KEY }}"

  - name: Put docker compose file
    ansible.builtin.template:
      src: templates/docker-compose.j2
      dest: "{{ BK_DIR }}/docker-compose.yaml"
      mode: "0644"

  - name: Aerospike configuration
    ansible.builtin.template:
      src: templates/aerospike.conf.j2
      dest: "{{ BK_DIR }}/aerospike-config/aerospike.conf"
      mode: "0644"

  - name: Logrotate entrypoint
    ansible.builtin.template:
      src: templates/logrotate.j2
      dest: "{{ BK_DIR }}/logrotate.sh"
      mode: "0755"

  - name: Compose pull
    ansible.builtin.shell:
      chdir: "{{ BK_DIR }}"
      cmd: docker compose pull

  - name: Create BLS keys
    ansible.builtin.shell:
      cmd: "docker run --rm --entrypoint /usr/local/bin/node-helper -v {{ BK_DIR }}/bk-configs:/staking {{ STAKING_IMAGE }} bls --path block_keeper{{ NODE_ID }}_bls.keys.json"
      creates: "{{ BK_DIR }}/bk-configs/block_keeper{{ NODE_ID }}_bls.keys.json"

  - name: Compose up
    ansible.builtin.shell:
      chdir: "{{ BK_DIR }}"
      cmd: docker compose up -d

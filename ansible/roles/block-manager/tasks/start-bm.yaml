- name: "Ensures block manager directories"
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: u=rwx,g=rwx,o=rwx
  with_items:
    - "{{ BM_DIR }}"
    - "{{ BM_LOGS_DIR }}"

- name: "Ensures keys dir exists: {{ BM_DIR }}/bm-configs"
  ansible.builtin.file:
    path: "{{ BM_DIR }}/bm-configs"
    state: directory
    mode: u=rwx,g=,o=rwx

- name: Copy keys file
  copy:
    dest: "{{ BM_DIR }}/bm-configs/"
    src: "{{ item }}"
  loop:
    - "{{ BM_WALLET_KEYS }}"
    - "{{ BM_SIGNER_KEYS }}"

- name: Get public wallet key
  ansible.builtin.shell:
    chdir: "{{ BM_DIR }}/bm-configs/"
    cmd: "cat {{ BM_WALLET_KEYS }} | jq -r '.public'"
  register: BM_PUBLIC_KEY_OUTPUT

- name: Register public wallet key
  ansible.builtin.set_fact:
    BM_OWNER_WALLET_PUBKEY: "{{ BM_PUBLIC_KEY_OUTPUT.stdout }}"

- name: Production compose
  ansible.builtin.template:
    src: templates/compose.j2
    dest: "{{ BM_DIR }}/compose.yaml"
    mode: "0644"

- name: Copy cron script
  ansible.builtin.copy:
    src: files/bm-rotate.sh
    dest: "{{ BM_DIR }}/bm-rotate.sh"
    mode: "0755"
    owner: "{{ ansible_user }}"

- name: Create cron entry
  ansible.builtin.cron:
    name: "rotate BM database"
    cron_file: bm_rotate
    user: root
    minute: "0"
    hour: "5"
    job: "{{ BM_DIR }}/bm-rotate.sh >> {{ BM_LOGS_DIR }}/bm-rotate.log"

- name: Log rotate configuration
  ansible.builtin.template:
    src: templates/logrotate.j2
    dest: "{{ BM_DIR }}/logrotate.sh"
    mode: "0755"
  register: logrotate

- name: Compose pull
  ansible.builtin.shell:
    chdir: "{{ BM_DIR }}"
    cmd: docker compose pull

- name: Create ackinacki-net manually
  ansible.builtin.shell:
    cmd: docker network create ackinacki-net
  ignore_errors: true
  when:
    - CREATE_NET

- name: Compose UP
  ansible.builtin.shell:
    chdir: "{{ BM_DIR }}"
    cmd: docker compose up -d

- name: Compose restart logrotate
  ansible.builtin.shell:
    chdir: "{{ BM_DIR }}"
    cmd: docker compose restart logrotate
  when:
    - logrotate.changed

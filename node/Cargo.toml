[package]
name = "node"
version = "0.1.0"
edition.workspace = true
rust-version.workspace = true
build = 'build.rs'
license-file.workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
anyhow.workspace = true
bincode.workspace = true
clap.workspace = true
database.workspace = true
gosh_bls_lib.workspace = true
hex.workspace = true
lazy_static.workspace = true
lockfree.workspace = true
message-router.workspace = true
network.workspace = true
num-bigint.workspace = true
num-traits.workspace = true
parking_lot.workspace = true
serde.workspace = true
serde_json.workspace = true
tokio.workspace = true
tracing.workspace = true
tracing-subscriber.workspace = true
tvm_abi.workspace = true
tvm_block.workspace = true
tvm_block_json.workspace = true
tvm_client.workspace = true
tvm_executor.workspace = true
tvm_tl_codegen.workspace = true
tvm_types.workspace = true
tvm_vm.workspace = true
url.workspace = true

bitflags = "2.6.0"
chrono = { version = "0.4.38", features = ["serde"] }
failure = "0.1.8"
futures = { version = "0.3.30", default-features = false }
gossip = { path = "../gossip/" }
http-server = { path = "../http-server/" }
itertools = "0.12.0"
log = "0.4.20"
lru = "0.12.3"
num_cpus = "1.16.0"
rand = { version = "0.8.5", features = ["small_rng"] }
reqwest = { version = "0.11.22", default-features = false, features = ["rustls-tls", "gzip", "stream", "blocking"] }
rusqlite.workspace = true
serde_with = "3.8.1"
serde_yaml = "0.9.33"
sha2 = "0.10.8"
signal-hook = "0.3.17"
thiserror = "2.0.3"
transport-layer = { path = "../transport-layer/" }
typed-builder = "0.20.0"

[dev-dependencies]
mockall = "0.11.4"

[features]
# Use automocks in binaries
use_automocks = []
allow-dappid-thread-split = []
allow-threads-merge = []

# Record time of heavy operations
timing = []

# Turn on TVM tracing
tvm_tracing = []
nack_test = []

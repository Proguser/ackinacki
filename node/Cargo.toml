[package]
name = "node"
version = "0.1.0"
edition.workspace = true
rust-version.workspace = true
build = 'build.rs'
license-file.workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
anyhow.workspace = true
bincode.workspace = true
clap.workspace = true
database.workspace = true
gosh_bls_lib.workspace = true
hex.workspace = true
http-server.workspace = true
lazy_static.workspace = true
lockfree.workspace = true
message-router.workspace = true
network.workspace = true
num-bigint.workspace = true
num-traits.workspace = true
opentelemetry.workspace = true
opentelemetry-otlp.workspace = true
opentelemetry_sdk.workspace = true
parking_lot.workspace = true
rayon.workspace = true
serde.workspace = true
serde_json.workspace = true
serde_with.workspace = true
telemetry_utils.workspace = true
tokio.workspace = true
tracing.workspace = true
tracing-opentelemetry.workspace = true
tracing-subscriber.workspace = true
tvm_abi.workspace = true
tvm_block.workspace = true
tvm_block_json.workspace = true
tvm_client.workspace = true
tvm_contracts.workspace = true
tvm_executor.workspace = true
tvm_tl_codegen.workspace = true
tvm_types.workspace = true
tvm_vm.workspace = true
url.workspace = true

account-inbox = { path = "./libs/account-inbox" }
atomic-wait = "1.1.0"
bitflags = "2.6.0"
chitchat.workspace = true
chrono = { version = "0.4.38", features = ["serde"] }
core_affinity = { version = "0.8.3" }
derive-getters = "0.5.0"
derive_setters = { path = "./libs/derive-setters" }
failure = "0.1.8"
futures = { version = "0.3.30", default-features = false }
gossip.workspace = true
governor.workspace = true
indexset = "0.10.3"
itertools = "0.12.0"
log = "0.4.20"
lru = "0.12.3"
nonzero_ext.workspace = true
num_cpus = "1.16.0"
rand = { version = "0.8.5", features = ["small_rng"] }
reqwest = { version = "0.11.22", default-features = false, features = ["rustls-tls", "gzip", "stream", "blocking"] }
rusqlite.workspace = true
serde_yaml = "0.9.33"
signal-hook = "0.3.17"
thiserror = "2.0.3"
transport-layer.workspace = true
typed-builder = "0.20.0"
weak-table = "0.3.2"

# Windows doesn't support assembly for compilation
# will be fixed when sha2 0.11 released
[target.'cfg(not(target_os = "windows"))'.dependencies]
sha2 = { version = "0.10.8", features = ["asm"] }

[target.'cfg(target_os = "windows")'.dependencies]
sha2 = { version = "0.10.8" }

[dev-dependencies]
criterion = "0.5.1"
migration-tool.workspace = true
mockall = "0.11.4"
tempfile = "3.14.0"
testdir = "0.9.3"

[features]
default = ["fail-fast", "deadlock-detection"]
# Use automocks in binaries
use_automocks = []
allow-dappid-thread-split = []
allow-threads-merge = []
deadlock-detection = []
fail-fast = []
nack-on-block-verification-fail = []
messages_db = []

# Record time of heavy operations
timing = []

# Turn on TVM tracing
tvm_tracing = []
nack_test = []

# Enable misbehaving
misbehave = []

rayon_affinity = []

# Call sync while saving files that are also stored in memory cache
sync_files = []

# Disable write operations to the sqlite database
disable_db_write = []

[[bench]]
name = "on_block_finalized"
harness = false

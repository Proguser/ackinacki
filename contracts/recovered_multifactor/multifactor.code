.fragment c4_to_c7, {
	PUSHROOT
	CTOS
	LDU 256 ; pubkey c4
	LDU 1 ; ctor flag
	LDDICT
	LDU 256
	LDU 32
	ROTREV
	PAIR
	SWAP
	LDU 256
	LDDICT
	LDREF
	ENDS
	CTOS
	LDU 256
	LDI 1
	SWAP
	NULLROTRIFNOT
	PUSHCONT {
		LDU 256
	}
	IF
	LDU 256
	LDREF
	ENDS
	SETGLOB 17
	SETGLOB 16
	SETGLOB 15
	SETGLOB 14
	SETGLOB 13
	SETGLOB 12
	SETGLOB 11
	SETGLOB 10
	SETGLOB 6
	SETGLOB 2
}

.fragment _factors, {
	DROP
	ENDS
	CALLREF {
		.inline c4_to_c7
	}
	GETGLOB 13
	OVER
	PUSHCONT {
		PUSHSLICE xc00000000000000000000000008a58963b
		NEWC
		STSLICE
		STDICT
		ENDC
		PUSHINT 0
		SENDRAWMSG
	}
	IF
	THROW 0
}

.fragment _owner_pubkey, {
	DROP
	ENDS
	CALLREF {
		.inline c4_to_c7
	}
	GETGLOB 14
	OVER
	PUSHCONT {
		PUSHSLICE xc0000000000000000000000000ae9e840c
		NEWC
		STSLICE
		STU 256
		ENDC
		PUSHINT 0
		SENDRAWMSG
	}
	IF
	THROW 0
}

.fragment _pub_recovery_key, {
	DROP
	ENDS
	CALLREF {
		.inline c4_to_c7
	}
	GETGLOB 16
	OVER
	PUSHCONT {
		PUSHSLICE xc0000000000000000000000000ccc6c982
		NEWC
		STSLICE
		STU 256
		ENDC
		PUSHINT 0
		SENDRAWMSG
	}
	IF
	THROW 0
}

.fragment gc_1b71d85f_internal, {
	.loc modifiers/replayprotection.sol, 64
	PUSHINT 0
	.loc modifiers/replayprotection.sol, 65
	GETGLOB 10
	DUP
	PUSHINT 32
	DICTUMIN
	PUSHCONT {
		PUXC S0, S1
		PLDDICT
	}
	PUSHCONT {
		NULL
		BLKPUSH 2, 0
	}
	IFELSE
	PUSHCONT {
		PUSH S2
		ISNULL
		NOT
	}
	PUSHCONT {
		.loc modifiers/replayprotection.sol, 66
		PUSH S4
		.loc modifiers/replayprotection.sol, 67
		GTINT 19
		IFRETALT
		.loc modifiers/replayprotection.sol, 70
		PUSH S4
		INC
		POP S5
		.loc modifiers/replayprotection.sol, 71
		OVER
		NOW
		LEQ
		PUSHCONT {
			.loc modifiers/replayprotection.sol, 72
			OVER
			GETGLOB 10
			PUSHINT 32
			DICTUDEL
			DROP
			SETGLOB 10
			.loc modifiers/replayprotection.sol, 0
		}
		PUSHCONT {
			.loc modifiers/replayprotection.sol, 74
			RETALT
			.loc modifiers/replayprotection.sol, 0
		}
		IFELSE
		.loc modifiers/replayprotection.sol, 0
		XC2PU S0, S2, S3
		PUSHINT 32
		DICTUGETNEXT
		PUSHCONT {
			PUXC S0, S1
			PLDDICT
		}
		PUSHCONT {
			NULL
			BLKPUSH 2, 0
		}
		IFELSE
		BLKDROP2 2, 3
	}
	WHILEBRK
	BLKDROP 5
	.loc modifiers/replayprotection.sol, 0
}

.fragment _zkaddr, {
	DROP
	ENDS
	CALLREF {
		.inline c4_to_c7
	}
	GETGLOB 17
	OVER
	PUSHCONT {
		PUSHSLICE xc0000000000000000000000000ee9846fc
		NEWC
		STSLICE
		STREF
		ENDC
		PUSHINT 0
		SENDRAWMSG
	}
	IF
	THROW 0
}

.fragment acceptCandidateSeedPhrase_47e22899_internal, {
	.loc modifiers/modifiers.sol, 22
	GETGLOB 5
	DUP
	ISNULL
	PUSHCONT {
		DROP
		PUSHINT 0
	}
	IF
	GETGLOB 16
	EQUAL
	THROWIFNOT 303
	.loc multifactor.sol, 100
	GETGLOB 15
	ISNULL
	THROWIF 308
	.loc multifactor.sol, 101
	ACCEPT
	.loc multifactor.sol, 102
	GETGLOB 15
	DUP
	ISNULL
	THROWIF 63
	SETGLOB 14
	.loc multifactor.sol, 103
	NULL
	SETGLOB 15
	.loc multifactor.sol, 0
}

.fragment c7_to_c4, {
	GETGLOB 17
	GETGLOB 16
	GETGLOB 15
	GETGLOB 14
	GETGLOB 13
	GETGLOB 12
	GETGLOB 11
	GETGLOB 10
	GETGLOB 2
	NEWC
	STU 256
	STONE
	STDICT
	SWAP
	UNPAIR
	XCHG S2
	STU 256
	STU 32
	STU 256
	STDICT
	ROLLREV 4
	NEWC
	STU 256
	XCPU S1, S0
	ISNULL
	PUSHCONT {
		DROP
		STZERO
	}
	PUSHCONT {
		SWAP
		STONE
		STU 256
	}
	IFELSE
	STU 256
	STREF
	STBREFR
	ENDC
	POPROOT
}

.fragment acceptCandidateSeedPhrase, {
	DROP
	GETGLOB 6
	THROWIFNOT 76
	GETGLOB 2
	ISNULL
	IFREF {
		.inline c4_to_c7
	}
	.loc multifactor.sol, 99
	ENDS
	.loc multifactor.sol, 0
	CALLREF {
		.inline acceptCandidateSeedPhrase_47e22899_internal
	}
	CALLREF {
		.inline c7_to_c4
	}
	THROW 0
}

.fragment addZKP_a3c99cbc_internal, {
	.loc multifactor.sol, 65
	NOW
	OVER
	LEQ
	THROWIFNOT 309
	.loc multifactor.sol, 66
	PUSH2 S0, S5
	XCHG3 S6, S4, S3
	GETGLOB 17
	POSEIDON
	.loc multifactor.sol, 67
	XCHG3 S1, S3, S0
	PUSHINT 0
	VERGRTH16
	THROWIFNOT 307
	.loc multifactor.sol, 69
	ACCEPT
	.loc multifactor.sol, 70
	GETGLOB 13
	SWAP
	NEWC
	STU 64
	ROTREV
	PUSHPOW2 8
	DICTUSETB
	SETGLOB 13
	.loc multifactor.sol, 73
	PUSHINT 1
	MYADDR
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHSLICE x405f5e1000000000000000000000000000006c7cc80c
	STSLICER
	STU 8
	ENDC
	PUSHINT 1
	SENDRAWMSG
	.loc multifactor.sol, 0
}

.fragment addZKP, {
	DROP
	GETGLOB 6
	THROWIFNOT 76
	GETGLOB 2
	ISNULL
	IFREF {
		.inline c4_to_c7
	}
	.loc multifactor.sol, 56
	OVER
	PUSHCONT {
		LDREF
		LDREF
		ENDS
		CTOS
	}
	PUSHCONT {
		LDREF
	}
	IFELSE
	LDU 256
	LDREF
	LDU 8
	LDREF
	LDREF
	LDU 64
	ENDS
	.loc multifactor.sol, 0
	CALLREF {
		.inline addZKP_a3c99cbc_internal
	}
	CALLREF {
		.inline c7_to_c4
	}
	THROW 0
}

.fragment changeSeedPhrase_1ef6b505_internal, {
	.loc multifactor.sol, 92
	GETGLOB 5
	DUP
	ISNULL
	PUSHCONT {
		DROP
		PUSHINT 0
	}
	IF
	GETGLOB 13
	PUSHPOW2 8
	DICTUGET
	NULLSWAPIFNOT
	NIP
	THROWIFNOT 307
	.loc multifactor.sol, 93
	NOW
	GETGLOB 5
	DUP
	ISNULL
	PUSHCONT {
		DROP
		PUSHINT 0
	}
	IF
	GETGLOB 13
	PUSHPOW2 8
	DICTUGET
	ZEROSWAPIFNOT
	PUSHCONT {
		PLDU 64
	}
	IF
	LEQ
	THROWIFNOT 309
	.loc multifactor.sol, 94
	GETGLOB 15
	ISNULL
	THROWIFNOT 308
	.loc multifactor.sol, 95
	ACCEPT
	.loc multifactor.sol, 96
	SETGLOB 15
	.loc multifactor.sol, 0
}

.fragment changeSeedPhrase, {
	DROP
	GETGLOB 6
	THROWIFNOT 76
	GETGLOB 2
	ISNULL
	IFREF {
		.inline c4_to_c7
	}
	.loc multifactor.sol, 90
	OVER
	PUSHCONT {
		LDREF
		ENDS
		CTOS
	}
	IF
	LDU 256
	ENDS
	.loc multifactor.sol, 0
	CALLREF {
		.inline changeSeedPhrase_1ef6b505_internal
	}
	CALLREF {
		.inline c7_to_c4
	}
	THROW 0
}

.fragment constructor, {
	DROP
	GETGLOB 2
	ISNULL
	IFREF {
		.inline c4_to_c7
	}
	GETGLOB 6
	THROWIF 51
	OVER
	PUSHCONT {
		LDREF
		LDREF
		ENDS
		CTOS
	}
	PUSHCONT {
		LDREF
	}
	IFELSE
	LDU 256
	LDU 64
	ENDS
	.loc multifactor.sol, 30
	CNVRTSHELLQ
	.loc multifactor.sol, 31
	GETGLOB 2
	THROWIFNOT 101
	.loc multifactor.sol, 32
	GETGLOB 5
	DUP
	ISNULL
	PUSHCONT {
		DROP
		PUSHINT 0
	}
	IF
	GETGLOB 2
	EQUAL
	THROWIFNOT 102
	.loc multifactor.sol, 33
	ACCEPT
	.loc multifactor.sol, 34
	SWAP
	SETGLOB 17
	.loc multifactor.sol, 35
	GETGLOB 5
	DUP
	ISNULL
	PUSHCONT {
		DROP
		PUSHINT 0
	}
	IF
	SETGLOB 14
	.loc multifactor.sol, 36
	SETGLOB 16
	.loc multifactor.sol, 0
	CALLREF {
		.inline c7_to_c4
	}
	THROW 0
}

.fragment deleteZKP_919f1d30_internal, {
	.loc modifiers/modifiers.sol, 22
	GETGLOB 5
	DUP
	ISNULL
	PUSHCONT {
		DROP
		PUSHINT 0
	}
	IF
	GETGLOB 14
	EQUAL
	THROWIFNOT 303
	.loc multifactor.sol, 142
	DUP
	GETGLOB 13
	PUSHPOW2 8
	DICTUGET
	NULLSWAPIFNOT
	NIP
	THROWIFNOT 307
	.loc multifactor.sol, 143
	ACCEPT
	.loc multifactor.sol, 144
	GETGLOB 13
	PUSHPOW2 8
	DICTUDEL
	DROP
	SETGLOB 13
	.loc multifactor.sol, 0
}

.fragment deleteZKP, {
	DROP
	GETGLOB 6
	THROWIFNOT 76
	GETGLOB 2
	ISNULL
	IFREF {
		.inline c4_to_c7
	}
	.loc multifactor.sol, 141
	OVER
	PUSHCONT {
		LDREF
		ENDS
		CTOS
	}
	IF
	LDU 256
	ENDS
	.loc multifactor.sol, 0
	CALLREF {
		.inline deleteZKP_919f1d30_internal
	}
	CALLREF {
		.inline c7_to_c4
	}
	THROW 0
}

.fragment exchangeToken_53d168e3_internal, {
	.loc multifactor.sol, 148
	ACCEPT
	.loc multifactor.sol, 149
	CNVRTSHELLQ
	.loc multifactor.sol, 0
}

.fragment exchangeToken, {
	DROP
	GETGLOB 6
	THROWIFNOT 76
	.loc multifactor.sol, 147
	OVER
	PUSHCONT {
		LDREF
		ENDS
		CTOS
	}
	IF
	LDU 64
	ENDS
	.loc multifactor.sol, 0
	CALLREF {
		.inline exchangeToken_53d168e3_internal
	}
	IFREF {
		.inline c7_to_c4
	}
	THROW 0
}

.fragment getTimeStamp_da235b22_internal, {
	.loc multifactor.sol, 40
	NOW
	.loc multifactor.sol, 0
}

.fragment getTimeStamp, {
	DROP
	GETGLOB 6
	THROWIFNOT 76
	.loc multifactor.sol, 39
	ENDS
	.loc multifactor.sol, 0
	CALLREF {
		.inline getTimeStamp_da235b22_internal
	}
	OVER
	PUSHCONT {
		PUSH S3
		CTOS
		LDU 2
		LDMSGADDR
		DROP
		NIP
		NEWC
		STSLICECONST xc
		STSLICE
		PUSHINT 3357467409
		STUR 130
		STU 32
		ENDC
		PUSHINT 0
		SENDRAWMSG
	}
	PUSHCONT {
		DROP
	}
	IFELSE
	IFREF {
		.inline c7_to_c4
	}
	THROW 0
}

.fragment getVersion_0d8e6e2c_internal, {
	.loc multifactor.sol, 153
	PUSHREF {
		.blob x312e302e30
	}
	PUSHREF {
		.blob x4d756c7469666163746f72
	}
	.loc multifactor.sol, 0
}

.fragment getVersion, {
	DROP
	GETGLOB 6
	THROWIFNOT 76
	.loc multifactor.sol, 152
	ENDS
	.loc multifactor.sol, 0
	CALLREF {
		.inline getVersion_0d8e6e2c_internal
	}
	PUSH S2
	PUSHCONT {
		PUSH S4
		CTOS
		LDU 2
		LDMSGADDR
		DROP
		NIP
		NEWC
		STSLICECONST xc
		STSLICE
		PUSHINT 98
		STZEROES
		XCHG S1, S2
		STSLICECONST xbfd85655
		STREF
		STREF
		ENDC
		PUSHINT 0
		SENDRAWMSG
	}
	PUSHCONT {
		DROP2
	}
	IFELSE
	IFREF {
		.inline c7_to_c4
	}
	THROW 0
}

.fragment sendTransaction_b5fb0cc7_internal, {
	.loc multifactor.sol, 84
	GETGLOB 5
	DUP
	ISNULL
	PUSHCONT {
		DROP
		PUSHINT 0
	}
	IF
	GETGLOB 13
	PUSHPOW2 8
	DICTUGET
	NULLSWAPIFNOT
	NIP
	THROWIFNOT 307
	.loc multifactor.sol, 85
	NOW
	GETGLOB 5
	DUP
	ISNULL
	PUSHCONT {
		DROP
		PUSHINT 0
	}
	IF
	GETGLOB 13
	PUSHPOW2 8
	DICTUGET
	ZEROSWAPIFNOT
	PUSHCONT {
		PLDU 64
	}
	IF
	LEQ
	THROWIFNOT 309
	.loc multifactor.sol, 86
	ACCEPT
	.loc multifactor.sol, 87
	XCHG3 S0, S3, S4
	UFITS 120
	BLKSWAP 2, 4
	NEWC
	STSLICECONST x6_
	STI 1
	STSLICECONST x1_
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 1
	STUR 107
	STREF
	ENDC
	SWAP
	SENDRAWMSG
	.loc multifactor.sol, 0
}

.fragment sendTransaction, {
	DROP
	GETGLOB 6
	THROWIFNOT 76
	GETGLOB 2
	ISNULL
	IFREF {
		.inline c4_to_c7
	}
	.loc multifactor.sol, 76
	OVER
	PUSHCONT {
		LDREF
		ENDS
		CTOS
	}
	IF
	LDMSGADDR
	LDU 128
	LDDICT
	LDI 1
	LDU 8
	LDREF
	ENDS
	.loc multifactor.sol, 0
	CALLREF {
		.inline sendTransaction_b5fb0cc7_internal
	}
	IFREF {
		.inline c7_to_c4
	}
	THROW 0
}

.fragment tryPartiallyCleanZKP_c9bebf79_internal, {
	.loc multifactor.sol, 124
	ACCEPT
	.loc multifactor.sol, 125
	GETGLOB 13
	PUSHPOW2 8
	DICTUMIN
	NULLSWAPIFNOT
	PUSHCONT {
		SWAP
		PLDU 64
		PAIR
	}
	IF
	.loc multifactor.sol, 126
	OVER
	PUSHCONT {
		.loc multifactor.sol, 127
		DUP
		ISNULL
		PUSHCONT {
			.loc multifactor.sol, 136
			RETALT
			.loc multifactor.sol, 0
		}
		PUSHCONT {
			.loc multifactor.sol, 128
			BLKPUSH 2, 0
			ISNULL
			THROWIF 63
			UNPAIR
			.loc multifactor.sol, 129
			NOW
			SWAP
			GREATER
			PUSHCONT {
				.loc multifactor.sol, 130
				GETGLOB 13
				PUSHPOW2 8
				DICTUDEL
				DROP
				SETGLOB 13
				.loc multifactor.sol, 131
				RETALT
				.loc multifactor.sol, 0
			}
			IFJMP
			.loc multifactor.sol, 133
			GETGLOB 13
			PUSHPOW2 8
			DICTUGETNEXT
			NULLSWAPIFNOT
			PUSHCONT {
				SWAP
				PLDU 64
				PAIR
			}
			IF
			NIP
			.loc multifactor.sol, 0
		}
		IFELSE
		.loc multifactor.sol, 0
	}
	REPEATBRK
	DROP2
	.loc multifactor.sol, 0
}

.fragment tryPartiallyCleanZKP, {
	DROP
	GETGLOB 6
	THROWIFNOT 76
	GETGLOB 2
	ISNULL
	IFREF {
		.inline c4_to_c7
	}
	.loc multifactor.sol, 123
	LDU 8
	ENDS
	.loc multifactor.sol, 0
	CALLREF {
		.inline tryPartiallyCleanZKP_c9bebf79_internal
	}
	CALLREF {
		.inline c7_to_c4
	}
	THROW 0
}

.fragment updateRecoveryPhrase_82e450bd_internal, {
	.loc modifiers/modifiers.sol, 22
	GETGLOB 5
	DUP
	ISNULL
	PUSHCONT {
		DROP
		PUSHINT 0
	}
	IF
	GETGLOB 14
	EQUAL
	THROWIFNOT 303
	.loc modifiers/replayprotection.sol, 29
	ACCEPT
	.loc multifactor.sol, 44
	SETGLOB 16
	.loc multifactor.sol, 0
}

.fragment updateRecoveryPhrase, {
	DROP
	GETGLOB 6
	THROWIFNOT 76
	GETGLOB 2
	ISNULL
	IFREF {
		.inline c4_to_c7
	}
	.loc multifactor.sol, 43
	OVER
	PUSHCONT {
		LDREF
		ENDS
		CTOS
	}
	IF
	LDU 256
	ENDS
	.loc multifactor.sol, 0
	CALLREF {
		.inline updateRecoveryPhrase_82e450bd_internal
	}
	CALLREF {
		.inline c7_to_c4
	}
	THROW 0
}

.fragment updateSeedPhrase_7fa4f666_internal, {
	.loc modifiers/modifiers.sol, 22
	GETGLOB 5
	DUP
	ISNULL
	PUSHCONT {
		DROP
		PUSHINT 0
	}
	IF
	GETGLOB 14
	EQUAL
	THROWIFNOT 303
	.loc modifiers/replayprotection.sol, 29
	ACCEPT
	.loc multifactor.sol, 52
	SETGLOB 14
	.loc multifactor.sol, 0
}

.fragment updateSeedPhrase, {
	DROP
	GETGLOB 6
	THROWIFNOT 76
	GETGLOB 2
	ISNULL
	IFREF {
		.inline c4_to_c7
	}
	.loc multifactor.sol, 51
	OVER
	PUSHCONT {
		LDREF
		ENDS
		CTOS
	}
	IF
	LDU 256
	ENDS
	.loc multifactor.sol, 0
	CALLREF {
		.inline updateSeedPhrase_7fa4f666_internal
	}
	CALLREF {
		.inline c7_to_c4
	}
	THROW 0
}

.fragment updateZkaddr_6d109b94_internal, {
	.loc modifiers/modifiers.sol, 22
	GETGLOB 5
	DUP
	ISNULL
	PUSHCONT {
		DROP
		PUSHINT 0
	}
	IF
	GETGLOB 14
	EQUAL
	THROWIFNOT 303
	.loc modifiers/replayprotection.sol, 29
	ACCEPT
	.loc multifactor.sol, 48
	SETGLOB 17
	.loc multifactor.sol, 0
}

.fragment updateZkaddr, {
	DROP
	GETGLOB 6
	THROWIFNOT 76
	GETGLOB 2
	ISNULL
	IFREF {
		.inline c4_to_c7
	}
	.loc multifactor.sol, 47
	LDREF
	ENDS
	.loc multifactor.sol, 0
	CALLREF {
		.inline updateZkaddr_6d109b94_internal
	}
	CALLREF {
		.inline c7_to_c4
	}
	THROW 0
}

.fragment public_function_selector, {
	DUP
	PUSHINT 1088064542
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 319849066
		LEQ
		IFJMPREF {
			DUP
			PUSHINT 25036160
			EQUAL
			IFJMPREF {
				.inline changeSeedPhrase
			}
			DUP
			PUSHINT 173577787
			EQUAL
			IFJMPREF {
				.inline _factors
			}
			DUP
			PUSHINT 319849066
			EQUAL
			IFJMPREF {
				.inline sendTransaction
			}
		}
		DUP
		PUSHINT 1071142485
		LEQ
		IFJMPREF {
			DUP
			PUSHINT 782140428
			EQUAL
			IFJMPREF {
				.inline _owner_pubkey
			}
			DUP
			PUSHINT 1071142485
			EQUAL
			IFJMPREF {
				.inline getVersion
			}
		}
		DUP
		PUSHINT 1087853155
		EQUAL
		IFJMPREF {
			.inline addZKP
		}
		DUP
		PUSHINT 1088064542
		EQUAL
		IFJMPREF {
			.inline updateSeedPhrase
		}
	}
	DUP
	PUSHINT 1487567381
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 1272374034
		LEQ
		IFJMPREF {
			DUP
			PUSHINT 1209983761
			EQUAL
			IFJMPREF {
				.inline getTimeStamp
			}
			DUP
			PUSHINT 1272374034
			EQUAL
			IFJMPREF {
				.inline constructor
			}
		}
		DUP
		PUSHINT 1288096130
		EQUAL
		IFJMPREF {
			.inline _pub_recovery_key
		}
		DUP
		PUSHINT 1440983555
		EQUAL
		IFJMPREF {
			.inline updateRecoveryPhrase
		}
		DUP
		PUSHINT 1487567381
		EQUAL
		IFJMPREF {
			.inline deleteZKP
		}
	}
	DUP
	PUSHINT 1855473404
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 1701867329
		EQUAL
		IFJMPREF {
			.inline updateZkaddr
		}
		DUP
		PUSHINT 1820117004
		EQUAL
		IFJMPREF {
			.inline tryPartiallyCleanZKP
		}
		DUP
		PUSHINT 1855473404
		EQUAL
		IFJMPREF {
			.inline _zkaddr
		}
	}
	DUP
	PUSHINT 2090498174
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 2036688829
		EQUAL
		IFJMPREF {
			.inline acceptCandidateSeedPhrase
		}
		DUP
		PUSHINT 2090498174
		EQUAL
		IFJMPREF {
			.inline exchangeToken
		}
	}
}

.fragment main_external, {
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 9
	OVER
	CALLREF {
		.inline c4_to_c7
	}
	LDU 1 ; haveSign msgSlice
	SWAP
	PUSHCONT {
		PUSHPOW2 9
		LDSLICEX
		DUP
		MYADDR
		NEWC
		STSLICE
		STSLICE
		ENDC
		HASHCU
		SWAP
		LDU 1 ; signatureSlice hashMsgSlice hasPubkey msgSlice
		SWAP
		PUSHCONT {
			LDU 256 ; signatureSlice hashMsgSlice pubkey msgSlice
			XCHG2 S3, S3
		}
		PUSHCONT {
			XCHG S2
			GETGLOB 2
		}
		IFELSE
		DUP
		SETGLOB 5
		CHKSIGNU
		THROWIFNOT 40
	}
	PUSHCONT {
		LDU 1 ; hasPubkey msgSlice
		SWAP
		THROWIF 58
	}
	IFELSE
	PUSH2 S3, S0
	.loc modifiers/replayprotection.sol, 46
	LDU 64
	XCPU S3, S3
	BLKDROP2 2, 1
	.loc modifiers/replayprotection.sol, 48
	LDU 32
	POP S3
	.loc modifiers/replayprotection.sol, 49
	DUP
	NOW
	GREATER
	THROWIFNOT 302
	.loc modifiers/replayprotection.sol, 50
	DUP
	NOW
	PUSHINT 300
	ADD
	LESS
	THROWIFNOT 301
	.loc modifiers/replayprotection.sol, 53
	OVER
	HASHCU
	.loc modifiers/replayprotection.sol, 54
	OVER
	GETGLOB 10
	PUSHINT 32
	DICTUGET
	NULLSWAPIFNOT
	PUSHCONT {
		PLDDICT
		SINGLE
	}
	IF
	.loc modifiers/replayprotection.sol, 55
	DUP
	ISNULL
	DUP
	PUSHCONT {
		DROP
		DUP2
		UNSINGLE
		PUSHPOW2 8
		DICTUGET
		ZEROSWAPIFNOT
		PUSHCONT {
			PLDI 1
		}
		IF
		NOT
	}
	IFNOT
	THROWIFNOT 300
	.loc modifiers/replayprotection.sol, 56
	PUSH2 S1, S2
	PAIR
	SETGLOB 11
	.loc modifiers/replayprotection.sol, 59
	BLKDROP 4
	.loc modifiers/replayprotection.sol, 0
	LDU 32 ; funcId body
	SWAP
	CALLREF {
		.inline public_function_selector
	}
	THROW 60
}

.fragment main_internal, {
	PUSHROOT
	CTOS
	PUSHPOW2 8
	SDSKIPFIRST
	PLDI 1
	SETGLOB 6
	PUSH S2
	CTOS
	LDU 4 ; bounced tail
	LDMSGADDR ; bounced src tail
	DROP
	SETGLOB 9
	MODPOW2 1
	IFRET
	OVER
	SEMPTY ; isEmpty
	IFJMPREF {
		GETGLOB 6
		THROWIFNOT 76
	}
	OVER
	LDUQ 32  ; [funcId] body' ok
	THROWIFNOT 60
	OVER
	IFNOTJMPREF {
		GETGLOB 6
		THROWIFNOT 76
	}
	SWAP
	CALLREF {
		.inline public_function_selector
	}
	THROW 60
}

.fragment default_data_cell, {
	PUSHREF {
	}
	PUSHINT 0
	NULL
	PUSHINT 0
	NULL
	PUSHINT 0
	BLKPUSH 2, 0
	PAIR
	NEWC
	PUSHINT 258
	STZEROES
	SWAP
	UNPAIR
	XCHG S2
	STU 256
	STU 32
	STU 256
	STDICT
	ROLLREV 4
	NEWC
	STU 256
	XCPU S1, S0
	ISNULL
	PUSHCONT {
		DROP
		STZERO
	}
	PUSHCONT {
		SWAP
		STONE
		STU 256
	}
	IFELSE
	STU 256
	STREF
	STBREFR
	ENDC
}

.fragment upd_only_time_in_c4, {
	PUSHROOT
	CTOS
	LDU 256
	LDU 64
	NIP
	GETGLOB 3
	ROT
	NEWC
	STU 256
	STU 64
	STSLICE
	ENDC
	POPROOT
}

.fragment onTickTock, {
}

; The code below forms a value of the StateInit type.
.blob x4_ ; split_depth = nothing
.blob x4_ ; special = nothing
.blob xc_ ; code = just
.cell { ; code cell
	PUSHREFCONT {
		DICTPUSHCONST 32
		DICTUGETJMPZ
		THROW 78
		.code-dict-cell 32, {
		}
		.cell { ; version
			.blob x736f6c20302e37362e31 ; sol 0.76.1
		}
	}
	POPCTR c3
	DUP
	IFNOTJMPREF {
		.inline main_internal
	}
	DUP
	EQINT -1
	IFJMPREF {
		.inline main_external
	}
	DUP
	EQINT -2
	IFJMPREF {
		.inline onTickTock
	}
	THROW 11
}
.blob xc_ ; data = just
.cell { 
	.inline-computed-cell default_data_cell, 0
}
.blob x4_ ; library = hme_empty
